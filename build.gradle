/**
 * Сборка приложения, разворачивание, а также открытие сайта
 * Требования:
 * - из командной строки доступен glassfish (утилита администрирования asadmin)
 * - определена переменна glassfishModules (файл gradle.properties) указывающая на каталог
 *   с модулями
 * - определена переменна webBrowser указывающая на приложение "Веб-браузер"
 * - веб-сервер должен быть запущен (выполнена команда asadmin start-domain)
 */


apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.liquibase.gradle'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '1.0'

dependencies
{
    providedCompile fileTree(dir: glassfishModules, include: '*.jar')
    testCompile fileTree(dir: 'src/main/library', include: '*.jar')
    compile fileTree(dir: 'src/main/library', include: '*.jar')
}

buildscript 
{
    dependencies 
    {
        classpath files('src/main/library/derby-10.14.1.0.jar')
        classpath files('src/main/library/derbyclient-10.14.1.0.jar')
        classpath files('src/main/library/liquibase-core-3.5.3.jar')
        classpath files('src/main/library/liquibase-gradle-plugin-1.2.1.jar')
    }
}

compileJava
{
    options.debug = true
}

test
{
    testLogging.showStandardStreams = true
}

war
{
    archiveName = 'game.war'
}

compileJava.doFirst {
    ProcessBuilder builder = new ProcessBuilder(["native2ascii", "src/main/resources/konofeev/message-ru.properties", "src/main/resources/konofeev/message.properties"]);
    Process process = builder.start();
    process.waitFor();
}

liquibase {
    activities {
        main {
            File propsFile = new File("${project.rootDir}/src/main/resources/liquibase/liquibase.properties")
            Properties properties = new Properties()
            properties.load(new FileInputStream(propsFile))
            changeLogFile 'src/main/resources/liquibase/changeLogMaster.xml'
            url 'jdbc:derby://localhost:1527/j2ee;create=true'
            username 'APP'
            password 'APP'
        }
        runList = "main"
    }
}
